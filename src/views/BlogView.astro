---
import { z } from "zod"

import BlogHeader from "@/components/blog/BlogHeader"
import BlogPostPreview from "@/components/blog/BlogPostPreview"
import Breadcrumb from "@/components/common/Breadcrumb"
import Col from "@/components/common/Col"
import Container from "@/components/common/Container"
import Pagination from "@/components/common/Pagination"
import Row from "@/components/common/Row"
import { categorySchema, postSchema } from "@/schema/app"
import routes, { withPagination } from "@/utils/routes"

import type { Lang } from "@/utils/lang"

interface Props {
  data: z.infer<typeof blogSchema>
  lang: Lang
}

export const blogSchema = z.object({
  posts: z.array(
    postSchema.omit({
      content: true,
      meta_description: true,
      meta_keywords: true,
    })
  ),
  categories: z.array(categorySchema),
  currentCategory: categorySchema.optional(),
  page: z.number().min(1),
  pagesCount: z.number(),
})

const { data, lang } = Astro.props
---

<BlogHeader
  title="Blog"
  categories={data.categories}
  currentCategory={data.currentCategory}
  lang={lang}
/>

<section class="bg-gray-100 py-10 lg:py-20">
  <Container>
    <Row>
      <Col>
        {
          (
            <Breadcrumb className="mb-3">
              <Breadcrumb.Item title="Etherna" path={routes.homePath(lang)} />
              <Breadcrumb.Item title="Blog" path={routes.blogPath(lang)} isLast />
            </Breadcrumb>
          )
        }
      </Col>
    </Row>
    <Row>
      <Col className="lg:w-3/4 xl:w-2/3">
        {
          data.posts.map(post => (
            <BlogPostPreview post={post} lang={lang} featured={false} client:load />
          ))
        }

        {
          data.pagesCount > 1 && (
            <Pagination
              className="mt-8"
              page={data.page}
              pagesCount={data.pagesCount}
              linkResolver={page => withPagination(routes.blogPath(lang), page)}
            />
          )
        }
      </Col>
      <Col as="aside" className="lg:w-1/4 xl:w-1/3" />
    </Row>
  </Container>
</section>
