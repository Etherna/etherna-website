---
import {
  DotnetLogo,
  EthereumLogo,
  MongoDbLogo,
  ReactLogo,
  SwarmLogo,
} from "@/components/assets/brands"
import {
  CensorshipIcon,
  CommunityIcon,
  CreativityIcon,
  DecentralizedIcon,
  GatewayIcon,
  IndexIcon,
  NoAdsIcon,
  OpenSourceIcon,
  PermanentIcon,
  RevenueIcon,
  ShadowBanIcon,
  SpeechFreedomIcon,
  ViewersIcon,
} from "@/components/assets/features"

import { Card } from "@/components/common/card"
import { Col } from "@/components/common/col"
import { Container } from "@/components/common/container"
import { Row } from "@/components/common/row"
import { AlphaPassBanner } from "@/components/landing/alpha-pass-banner"
import { Awards } from "@/components/landing/awards"
import { Contacts } from "@/components/landing/contacts"
import { Hero } from "@/components/landing/hero"
import { LandingSection } from "@/components/landing/landing-section"
import { NewsletterSection } from "@/components/landing/newsletter-section"
// import {PresentationVideo} from "@/components/landing/presentation-video"
import { Roadmap } from "@/components/landing/roadmap"
import { OrganizationSchema } from "@/components/schema/organization-schema"
import { ViewProps } from "@/queries/fetch-props"
import { t } from "@/utils/lang"

interface Props extends ViewProps<"home"> {}

const { data } = Astro.props
---

<Hero />

<section class="pb-24">
  <Container>
    <Row>
      <Col>
        <Card className="py-8">
          <div class="flex flex-col items-center">
            <div class="text-xs font-semibold uppercase text-gray-600">
              {t("landing:builtWith")}
            </div>
            <Container
              className="@apply [&_svg]:max-height-[65px] mt-8 [&_svg]:mx-auto [&_svg]:max-w-full"
            >
              <Row className="items-center justify-evenly">
                <Col className="mb-6 w-1/2 sm:w-1/3 md:w-1/5">
                  <a href={t("landing:ethereumUrl")} target="_blank" rel="noreferrer noopener">
                    <EthereumLogo />
                  </a>
                </Col>
                <Col className="mb-6 w-1/2 sm:w-1/3 md:w-1/5">
                  <a href={t("landing:swarmUrl")} target="_blank" rel="noreferrer noopener">
                    <SwarmLogo />
                  </a>
                </Col>
                <Col className="mb-6 w-1/2 sm:w-1/3 md:w-1/5">
                  <a href={t("landing:reactUrl")} target="_blank" rel="noreferrer noopener">
                    <ReactLogo />
                  </a>
                </Col>
                <Col className="mb-6 w-1/2 sm:w-1/3 md:w-1/5">
                  <a href={t("landing:dotnetUrl")} target="_blank" rel="noreferrer noopener">
                    <DotnetLogo />
                  </a>
                </Col>
                <Col className="mb-6 w-1/2 sm:w-1/3 md:w-1/5">
                  <a href={t("landing:mongodbUrl")} target="_blank" rel="noreferrer noopener">
                    <MongoDbLogo />
                  </a>
                </Col>
              </Row>
            </Container>
          </div>
        </Card>
      </Col>
    </Row>
  </Container>
</section>

<!-- <PresentationVideo /> -->

<AlphaPassBanner />

<LandingSection
  id="transparency"
  title={t("landing:transparency")}
  description={t("landing:transparencyDescription")}
  features={[
    {
      icon: CensorshipIcon,
      title: t("landing:transparencyFeatures.4.title"),
      description: t("landing:transparencyFeatures.4.description"),
    },
    {
      icon: ShadowBanIcon,
      title: t("landing:transparencyFeatures.0.title"),
      description: t("landing:transparencyFeatures.0.description"),
    },
    {
      icon: SpeechFreedomIcon,
      title: t("landing:transparencyFeatures.1.title"),
      description: t("landing:transparencyFeatures.1.description"),
    },
    {
      icon: OpenSourceIcon,
      title: t("landing:transparencyFeatures.2.title"),
      description: t("landing:transparencyFeatures.2.description"),
    },
    {
      icon: CommunityIcon,
      title: t("landing:transparencyFeatures.3.title"),
      description: t("landing:transparencyFeatures.3.description"),
    },
  ]}
/>

<LandingSection
  id="users"
  title={t("landing:users")}
  description={t("landing:usersDescription")}
  features={[
    {
      icon: NoAdsIcon,
      title: t("landing:usersFeatures.0.title"),
      description: t("landing:usersFeatures.0.description"),
    },
    {
      icon: CreativityIcon,
      title: t("landing:usersFeatures.1.title"),
      description: t("landing:usersFeatures.1.description"),
    },
    {
      icon: ViewersIcon,
      title: t("landing:usersFeatures.2.title"),
      description: t("landing:usersFeatures.2.description"),
    },
    {
      icon: RevenueIcon,
      title: t("landing:usersFeatures.3.title"),
      description: t("landing:usersFeatures.3.description"),
    },
  ]}
/>

<LandingSection
  id="innovative"
  title={t("landing:web3")}
  description={t("landing:web3Description")}
  features={[
    {
      icon: DecentralizedIcon,
      title: t("landing:web3Features.0.title"),
      description: t("landing:web3Features.0.description"),
    },
    {
      icon: PermanentIcon,
      title: t("landing:web3Features.1.title"),
      description: t("landing:web3Features.1.description"),
    },
  ]}
/>

<LandingSection
  id="extendable"
  title={t("landing:extendable")}
  description={t("landing:extendableDescription")}
  features={[
    {
      icon: IndexIcon,
      title: t("landing:extendableFeatures.0.title"),
      description: t("landing:extendableFeatures.0.description"),
    },
    {
      icon: GatewayIcon,
      title: t("landing:extendableFeatures.1.title"),
      description: t("landing:extendableFeatures.1.description"),
    },
  ]}
/>

<Roadmap milestones={data.milestones} client:load />

<Awards awards={data.awards} />

<Contacts />

<NewsletterSection socials={data.companyInfo.socials} client:load />

<OrganizationSchema
  companyName={data.companyInfo.companyName!}
  companyAddressLocality={data.companyInfo.companyAddressLocality!}
  companyPostalCode={data.companyInfo.companyAddressPostalCode!}
  companyStreetAddress={data.companyInfo.companyAddressStreet!}
  companyCountry={data.companyInfo.companyAddressCountry!}
  companyEmail={data.companyInfo.companyEmail!}
  companyFoundingDate={new Date(data.companyInfo.companyFoundingDate!)}
  companyKeywords={data.companyInfo.companyKeywords!}
/>
