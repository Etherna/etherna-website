<script>
  function imageEvent(e: Event) {
    removeThumbhash(e.target as HTMLImageElement)
  }

  function removeThumbhash(img: HTMLImageElement) {
    img.style.backgroundImage = ""
    img.style.backgroundSize = ""
    img.removeEventListener("load", imageEvent)
  }

  function trackImage(img: HTMLImageElement) {
    img.addEventListener("load", imageEvent)

    if (img.complete) {
      removeThumbhash(img)
    }

    const observer = new MutationObserver((record) => {
      record.forEach(() => {
        if (img.style.backgroundImage) {
          removeThumbhash(img)
        }
      })
    })
    observer.observe(img, {
      attributes: true,
      attributeFilter: ["src", "srcset", "style"],
      childList: false,
      subtree: false,
    })
  }

  function trackImagesAdded() {
    const observer = new MutationObserver((records) => {
      records.forEach((record) => {
        const imgs = Array.from(record.addedNodes).flatMap((el) =>
          Array.from((el as HTMLElement).querySelectorAll<HTMLImageElement>("img")),
        )
        imgs.forEach(trackImage)
      })
    })
    observer.observe(document.body, {
      attributes: false,
      childList: true,
      subtree: true,
    })
  }

  window.addEventListener("load", () => {
    const images = document.querySelectorAll<HTMLImageElement>("img[data-thumbhash]")
    images.forEach(trackImage)

    trackImagesAdded()
  })
</script>
